{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","className","style","dialog","active","to","id","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreators","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,iICG1IC,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,mCCKRE,EAPI,SAACC,GAClB,OACE,qBAAKC,UAAS,UAAKC,IAAMC,OAAX,YAAqBD,IAAME,QAAzC,SACE,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,UCAnCC,EAJC,SAACR,GACf,OAAO,qBAAKC,UAAWC,IAAMO,QAAtB,SAAgCT,EAAMS,W,iCC8BzCC,EAAcC,YAAiB,IAoBxBC,EAAsBC,YAAU,CAC3CC,KAAM,wBAD2BD,EAlBZ,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAGzB,8BACE,kDAUOa,EAlDC,SAACvB,GACf,IAAIJ,EAAQI,EAAMwB,YAEdC,EAAkB7B,EAAM8B,QAAQC,KAAI,SAACxB,GAAD,OACtC,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAsBD,GAAIH,EAAOG,IAAtBH,EAAOG,OAGzCsB,EAAmBhC,EAAMiC,SAASF,KAAI,SAAClB,GAAD,OACxC,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BH,GAAIG,EAAQH,IAAxBG,EAAQH,OAOlD,OACE,sBAAKL,UAAWC,IAAMwB,QAAtB,UACE,qBAAKzB,UAAWC,IAAM4B,aAAtB,SAAqCL,IACrC,sBAAKxB,UAAWC,IAAM2B,SAAtB,UACE,8BAAMD,IACN,cAAChB,EAAD,CAAqBG,SATP,SAACgB,GACnB/B,EAAMgC,YAAYD,EAAOE,0BCAdC,sBACbC,aAfoB,SAACvC,GACrB,MAAO,CACL4B,YAAa5B,EAAM4B,gBAIE,SAACY,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAoBJ,UJLH,SAACK,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKxC,MAAMH,OACT,cAACyC,EAAD,eAAeE,KAAKxC,QADI,cAAC,IAAD,CAAUK,GAAI,eAHJ,GACboC,IAAMH,WAWtC,OAJqCH,YAAQxC,EAARwC,CACnCI,KICWL,CAGbX","file":"static/js/4.de2d520b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1aEZm\",\"dialogsItems\":\"Dialogs_dialogsItems__9raMB\",\"active\":\"Dialogs_active__VBlNL\",\"messages\":\"Dialogs_messages__ZhAjX\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;    \r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={`${style.dialog} ${style.active}`}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport style from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={style.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((message) => (\r\n    <Message message={message.message} key={message.id} id={message.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>{dialogsElements}</div>\r\n      <div className={style.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter yuor massage\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreators } from \"../../redux/dialogs-reduсer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreators(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}