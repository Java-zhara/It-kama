{"version":3,"sources":["components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","alt","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","post","id","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength5","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreators","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","content","diskBlock","photos","large","userPhoto","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.905e53cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__hUpku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__I0WXr\",\"posts\":\"MyPosts_posts__193IZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3TEvy\",\"diskBlock\":\"ProfileInfo_diskBlock__1fTJt\"};","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img\r\n        src=\"https://funpick.ru/wp-content/uploads/2018/02/Ava-pats-12.jpg\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like:</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nimport style from \"./MyPosts.module.css\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((post) => (\r\n      <Post\r\n        key={post.id}\r\n        id={post.id}\r\n        message={post.message}\r\n        likesCount={post.likesCount}\r\n      />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength5 = maxLengthCreator(5);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        placeholder=\"Post message\"\r\n        name=\"newPostText\"\r\n        validate={[required, maxLength5]}\r\n      />\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const AddNewPostFormRedux = reduxForm({\r\n  form: \"profileAddNewPostFormRedux\",\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreators } from \"../../../redux/profile-reduсer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreators(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/avatar.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={style.content}>\r\n      <div className={style.diskBlock}>\r\n        <img\r\n          src={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n          alt=\"avatar\"\r\n        />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={style.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reduсer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status || \"NO STATUS\"}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}